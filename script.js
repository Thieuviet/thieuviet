let activities = JSON.parse(localStorage.getItem("activities")) || [];
const tbody = document.getElementById("timetableBody");

function renderTable() {
  tbody.innerHTML = "";
  activities.forEach((item, index) => {
    let row = `
      <tr class="${item.type}">
        <td>${item.day}</td>
        <td>${item.time}</td>
        <td>${item.name}</td>
        <td>${getTypeLabel(item.type)}</td>
        <td>
          <button class="action-btn edit-btn" onclick="editActivity(${index})">‚úèÔ∏è S·ª≠a</button>
          <button class="action-btn delete-btn" onclick="deleteActivity(${index})">üóë X√≥a</button>
        </td>
      </tr>
    `;
    tbody.innerHTML += row;
  });
  localStorage.setItem("activities", JSON.stringify(activities));
}

function addActivity() {
  const name = document.getElementById("activityInput").value.trim();
  const day = document.getElementById("daySelect").value;
  const time = document.getElementById("timeInput").value;
  const type = document.getElementById("typeSelect").value;

  if (!name || !time) {
    alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
    return;
  }

  activities.push({ day, time, name, type });
  renderTable();

  document.getElementById("activityInput").value = "";
  document.getElementById("timeInput").value = "";
}

function editActivity(index) {
  const newName = prompt("Nh·∫≠p ho·∫°t ƒë·ªông m·ªõi:", activities[index].name);
  const newTime = prompt("Nh·∫≠p th·ªùi gian m·ªõi:", activities[index].time);
  if (newName && newTime) {
    activities[index].name = newName;
    activities[index].time = newTime;
    renderTable();
  }
}

function deleteActivity(index) {
  if (confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ho·∫°t ƒë·ªông n√†y?")) {
    activities.splice(index, 1);
    renderTable();
  }
}

function searchActivity() {
  const keyword = document.getElementById("searchInput").value.toLowerCase();
  const rows = tbody.getElementsByTagName("tr");
  for (let row of rows) {
    const text = row.innerText.toLowerCase();
    row.style.display = text.includes(keyword) ? "" : "none";
  }
}

function getTypeLabel(type) {
  switch (type) {
    case "hoc": return "üìò H·ªçc t·∫≠p";
    case "congviec": return "üíº C√¥ng vi·ªác";
    case "giaitri": return "üéÆ Gi·∫£i tr√≠";
    case "canhan": return "üè† C√° nh√¢n";
    default: return "";
  }
}

console.log("Script ƒë√£ t·∫£i th√†nh c√¥ng!");


renderTable();